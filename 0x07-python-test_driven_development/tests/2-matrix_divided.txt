>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
>>> print(matrix)
[[1, 2, 3], [4, 5, 6]]
>>> try:
...     print(matrix_divided([1,2,3], 2))
... except Exception as e:
...     print(e)
... 
matrix must be a matrix (list of lists) of integers/floats
>>> try:
...     print(matrix_divided([[1,2,3], [10, 2]], 3))
... except Exception as e:
...     print(e)
... 
Each row of the matrix must have the same size
>>> try:
...     print(matrix_divided([[1,2,3], [10, 2, 3.9]], .5))
... except Exception as e:
...     print(e)
... 
[[2.0, 4.0, 6.0], [20.0, 4.0, 7.8]]
>>> try:
...     print(matrix_divided([[1,2,3], [10, 2, 3.9]], 'a'))
... except Exception as e:
...     print(e)
... 
div must be a number
>>> try:
...     print(matrix_divided([[1,2,3], [10, 2, 3.9]], [1, 2]))
... except Exception as e:
...     print(e)
... 
div must be a number
>>> try:
...     print(matrix_divided([[1,2,3], [10, 2, 3.9]], 0))
... except Exception as e:
...     print(e)
... 
division by zero
>>> new_matrix = matrix_divided(matrix, 2)
>>> new_matrix
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]
>>> for row in new_matrix:
...     for elem in row:
...             rounded = round(elem, 2)
...             if rounded == elem:
...                     print(f"{elem} is in 2 decimal place")
...             else:
...                     print(f"{eleme} is not in 2 decimal place")
... 
0.5 is in 2 decimal place
1.0 is in 2 decimal place
1.5 is in 2 decimal place
2.0 is in 2 decimal place
2.5 is in 2 decimal place
3.0 is in 2 decimal place